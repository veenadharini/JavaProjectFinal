/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FinalProject;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.Timer;
/**
 *
 * @author hamza
 */
public class AdminHomePage extends javax.swing.JFrame {

    /**
     * Creates new form SnellAdminHomePage
     */
    Connection con;
     Timer t;
    SimpleDateFormat st;
    SimpleDateFormat st1;
    public AdminHomePage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameField = new javax.swing.JTextField();
        seatField = new javax.swing.JTextField();
        timeField = new javax.swing.JTextField();
        dateField = new javax.swing.JTextField();
        timeTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        classTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        studentUsernameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        suspendButton = new javax.swing.JButton();
        reinstateButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        statusButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        countLabel = new javax.swing.JLabel();
        stateLabel = new javax.swing.JLabel();
        usernameStudentField = new javax.swing.JTextField();
        lastNameStudentField = new javax.swing.JTextField();
        departmentStudentField = new javax.swing.JTextField();
        emailStudentField = new javax.swing.JTextField();
        firstNameStudentField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        programStudentLabel = new javax.swing.JLabel();
        passwordStudentField = new javax.swing.JPasswordField();
        deleteButton1 = new javax.swing.JButton();
        createStudent = new javax.swing.JButton();
        deleteButton3 = new javax.swing.JButton();
        deleteButton4 = new javax.swing.JButton();
        programStudentField = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        usernameStudentField4 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        passwordStudentField4 = new javax.swing.JPasswordField();
        firstNameStudentField4 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        lastNameStudentField4 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        emailStudentField4 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        studentUsernameField4 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        facultyCreateButton = new javax.swing.JButton();
        deleteButton18 = new javax.swing.JButton();
        deleteButton19 = new javax.swing.JButton();
        deleteButton20 = new javax.swing.JButton();
        departmentFacultyField = new javax.swing.JComboBox<>();
        departmentLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        usernameStudentField3 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        passwordStudentField3 = new javax.swing.JPasswordField();
        firstNameStudentField3 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        lastNameStudentField3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        emailStudentField3 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        studentUsernameField3 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        snellCreateButton = new javax.swing.JButton();
        deleteButton14 = new javax.swing.JButton();
        deleteButton15 = new javax.swing.JButton();
        deleteButton16 = new javax.swing.JButton();
        phoneSnellField = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        usernameStudentField2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        passwordStudentField2 = new javax.swing.JPasswordField();
        firstNameStudentField2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        lastNameStudentField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        emailStudentField2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        studentUsernameField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        curryCreateButton = new javax.swing.JButton();
        deleteButton10 = new javax.swing.JButton();
        deleteButton11 = new javax.swing.JButton();
        deleteButton12 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        phoneCurryField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        usernameStudentField1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        passwordStudentField1 = new javax.swing.JPasswordField();
        firstNameStudentField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        lastNameStudentField1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        emailStudentField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        studentUsernameField1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        restaurantCreateButton = new javax.swing.JButton();
        deleteButton6 = new javax.swing.JButton();
        deleteButton7 = new javax.swing.JButton();
        deleteButton8 = new javax.swing.JButton();
        numberRestaurantField = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        usernameStudentField5 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        passwordStudentField5 = new javax.swing.JPasswordField();
        jLabel39 = new javax.swing.JLabel();
        firstNameStudentField5 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        lastNameStudentField5 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        emailStudentField5 = new javax.swing.JTextField();
        numberRestaurantField1 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        studentUsernameField5 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        restaurantCreateButton1 = new javax.swing.JButton();
        deleteButton9 = new javax.swing.JButton();
        deleteButton13 = new javax.swing.JButton();
        deleteButton17 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        studentUsernameField6 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        usernameStudentField6 = new javax.swing.JTextField();
        passwordStudentField6 = new javax.swing.JPasswordField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        firstNameStudentField6 = new javax.swing.JTextField();
        lastNameStudentField6 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        emailStudentField6 = new javax.swing.JTextField();
        numberRestaurantField2 = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        restaurantCreateButton2 = new javax.swing.JButton();
        deleteButton21 = new javax.swing.JButton();
        deleteButton22 = new javax.swing.JButton();
        deleteButton23 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(133, 0, 0));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        bookingsTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Password", "First Name", "Last Name", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookingsTable.setGridColor(new java.awt.Color(255, 255, 255));
        bookingsTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        bookingsTable.setSelectionForeground(new java.awt.Color(133, 0, 0));
        bookingsTable.getTableHeader().setReorderingAllowed(false);
        bookingsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookingsTable);
        if (bookingsTable.getColumnModel().getColumnCount() > 0) {
            bookingsTable.getColumnModel().getColumn(0).setResizable(false);
            bookingsTable.getColumnModel().getColumn(1).setResizable(false);
            bookingsTable.getColumnModel().getColumn(2).setResizable(false);
            bookingsTable.getColumnModel().getColumn(3).setResizable(false);
            bookingsTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(133, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("VIEW ALL SNELL ADMINS");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(133, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("VIEW ALL STUDENTS");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(133, 0, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("VIEW ALL CURRY ADMINS");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(133, 0, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("VIEW ALL RESTAURANT MANAGERS");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(133, 0, 0));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("VIEW ALL FACULTY");
        jButton6.setBorder(null);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(133, 0, 0));
        jButton12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("VIEW POPEYE SALES STAFF");
        jButton12.setBorder(null);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(133, 0, 0));
        jButton15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton15.setForeground(new java.awt.Color(255, 255, 255));
        jButton15.setText("VIEW CURRY PROMOTION STAFF");
        jButton15.setBorder(null);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(466, 466, 466)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(67, 67, 67))
        );

        jTabbedPane1.addTab("VIEW ALL USER ACCOUNTS", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        studentUsernameField.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Enter Student Username");

        deleteButton.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("CLEAR ALL UPCOMING RESERVATIONS");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        suspendButton.setBackground(new java.awt.Color(133, 0, 0));
        suspendButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        suspendButton.setForeground(new java.awt.Color(255, 255, 255));
        suspendButton.setText("SUSPEND STUDENT ACCOUNT");
        suspendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspendButtonActionPerformed(evt);
            }
        });

        reinstateButton.setBackground(new java.awt.Color(133, 0, 0));
        reinstateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reinstateButton.setForeground(new java.awt.Color(255, 255, 255));
        reinstateButton.setText("REINSTATE STUDENT ACCOUNT");
        reinstateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinstateButtonActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(133, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("SEARCH");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        statusButton.setBackground(new java.awt.Color(133, 0, 0));
        statusButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        statusButton.setForeground(new java.awt.Color(255, 255, 255));
        statusButton.setText("MARK ALL STATUS  AS CHECKED-IN");
        statusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusButtonActionPerformed(evt);
            }
        });

        studentTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Class", "Date", "Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setGridColor(new java.awt.Color(255, 255, 255));
        studentTable.setSelectionForeground(new java.awt.Color(133, 0, 0));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentTable);
        if (studentTable.getColumnModel().getColumnCount() > 0) {
            studentTable.getColumnModel().getColumn(0).setResizable(false);
            studentTable.getColumnModel().getColumn(1).setResizable(false);
            studentTable.getColumnModel().getColumn(2).setResizable(false);
            studentTable.getColumnModel().getColumn(3).setResizable(false);
            studentTable.getColumnModel().getColumn(4).setResizable(false);
        }

        countLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        stateLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        usernameStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        lastNameStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        departmentStudentField.setEditable(false);
        departmentStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        emailStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        emailStudentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailStudentFieldActionPerformed(evt);
            }
        });

        firstNameStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("DEPARTMENT");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("USERNAME");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("PASSWORD");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("FIRST NAME");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("EMAIL");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("LAST NAME");

        programStudentLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        programStudentLabel.setText("PROGRAM");

        passwordStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        deleteButton1.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton1.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton1.setText("UPDATE ACCOUNT");
        deleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton1ActionPerformed(evt);
            }
        });

        createStudent.setBackground(new java.awt.Color(133, 0, 0));
        createStudent.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        createStudent.setForeground(new java.awt.Color(255, 255, 255));
        createStudent.setText("CREATE ACCOUNT");
        createStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createStudentMouseClicked(evt);
            }
        });
        createStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createStudentActionPerformed(evt);
            }
        });

        deleteButton3.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton3.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton3.setText("DELETE ACCOUNT");
        deleteButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton3ActionPerformed(evt);
            }
        });

        deleteButton4.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton4.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton4.setText("CLEAR");
        deleteButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton4ActionPerformed(evt);
            }
        });

        programStudentField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        programStudentField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT YOUR PROGRAM", "information systems", "computer science", "data science", "engineering management" }));
        programStudentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programStudentFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(suspendButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reinstateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(statusButton))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(programStudentLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(emailStudentField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 409, Short.MAX_VALUE)
                                .addComponent(lastNameStudentField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(firstNameStudentField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordStudentField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(departmentStudentField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameStudentField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(programStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(195, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(createStudent)
                        .addGap(61, 61, 61)
                        .addComponent(deleteButton1)
                        .addGap(52, 52, 52)
                        .addComponent(deleteButton3)
                        .addGap(48, 48, 48)
                        .addComponent(deleteButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(219, 219, 219))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(countLabel)
                        .addGap(66, 66, 66)
                        .addComponent(stateLabel))
                    .addComponent(jButton5))
                .addGap(0, 1506, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(countLabel)
                    .addComponent(stateLabel)
                    .addComponent(usernameStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(66, 66, 66)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(suspendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reinstateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(52, 241, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(72, 72, 72)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(63, 63, 63)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailStudentField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(programStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(programStudentLabel))
                .addGap(31, 31, 31)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(departmentStudentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );

        jTabbedPane1.addTab("STUDENT ACCOUNTS", jPanel3);

        usernameStudentField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setText("USERNAME");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setText("PASSWORD");

        passwordStudentField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        firstNameStudentField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel28.setText("FIRST NAME");

        lastNameStudentField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel29.setText("LAST NAME");

        emailStudentField4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel30.setText("EMAIL");

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel33.setText("Enter Username");

        studentUsernameField4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jButton10.setBackground(new java.awt.Color(133, 0, 0));
        jButton10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("SEARCH");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        facultyCreateButton.setBackground(new java.awt.Color(133, 0, 0));
        facultyCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        facultyCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        facultyCreateButton.setText("CREATE ACCOUNT");
        facultyCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyCreateButtonActionPerformed(evt);
            }
        });

        deleteButton18.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton18.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton18.setText("UPDATE ACCOUNT");
        deleteButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton18ActionPerformed(evt);
            }
        });

        deleteButton19.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton19.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton19.setText("DELETE ACCOUNT");
        deleteButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton19ActionPerformed(evt);
            }
        });

        deleteButton20.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton20.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton20.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton20.setText("CLEAR");
        deleteButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton20ActionPerformed(evt);
            }
        });

        departmentFacultyField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        departmentFacultyField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT DEPARTMENT", "college of engineering", "khoury college of computer science" }));

        departmentLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        departmentLabel.setText("DEPARTMENT");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(facultyCreateButton)
                .addGap(61, 61, 61)
                .addComponent(deleteButton18)
                .addGap(52, 52, 52)
                .addComponent(deleteButton19)
                .addGap(48, 48, 48)
                .addComponent(deleteButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(studentUsernameField4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel33))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1033, 1033, 1033)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(departmentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(passwordStudentField4, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                        .addComponent(firstNameStudentField4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lastNameStudentField4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(emailStudentField4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(usernameStudentField4))
                    .addComponent(departmentFacultyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(361, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameStudentField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addComponent(jLabel33)
                .addGap(31, 31, 31)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentUsernameField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10)
                    .addComponent(passwordStudentField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(70, 70, 70)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameStudentField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailStudentField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departmentLabel)
                            .addComponent(departmentFacultyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(facultyCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lastNameStudentField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel29)))
                .addGap(163, 163, 163))
        );

        jTabbedPane1.addTab("FACULTY ACCOUNTS", jPanel4);

        usernameStudentField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel21.setText("USERNAME");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel22.setText("PASSWORD");

        passwordStudentField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        firstNameStudentField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setText("FIRST NAME");

        lastNameStudentField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setText("LAST NAME");

        emailStudentField3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setText("EMAIL");

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel32.setText("Enter Student Username");

        studentUsernameField3.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jButton9.setBackground(new java.awt.Color(133, 0, 0));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("SEARCH");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        snellCreateButton.setBackground(new java.awt.Color(133, 0, 0));
        snellCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        snellCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        snellCreateButton.setText("CREATE ACCOUNT");
        snellCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snellCreateButtonActionPerformed(evt);
            }
        });

        deleteButton14.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton14.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton14.setText("UPDATE ACCOUNT");
        deleteButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton14ActionPerformed(evt);
            }
        });

        deleteButton15.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton15.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton15.setText("DELETE ACCOUNT");
        deleteButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton15ActionPerformed(evt);
            }
        });

        deleteButton16.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton16.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton16.setText("CLEAR");
        deleteButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton16ActionPerformed(evt);
            }
        });

        phoneSnellField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel37.setText("PHONE NUMBER");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(318, 318, 318)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(studentUsernameField3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton9))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel32)))
                .addGap(323, 323, 323)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameStudentField3)
                            .addComponent(passwordStudentField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameStudentField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailStudentField3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStudentField3)
                            .addComponent(phoneSnellField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(128, 128, 128))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(snellCreateButton)
                        .addGap(61, 61, 61)
                        .addComponent(deleteButton14)
                        .addGap(52, 52, 52)
                        .addComponent(deleteButton15)
                        .addGap(48, 48, 48)
                        .addComponent(deleteButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(221, 221, 221))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addComponent(jLabel32)
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentUsernameField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel21)
                                    .addComponent(usernameStudentField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(149, 149, 149)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameStudentField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel24)
                                    .addComponent(lastNameStudentField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(passwordStudentField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(227, 227, 227)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(emailStudentField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneSnellField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addGap(90, 90, 90)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(snellCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(191, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SNELL ADMINS", jPanel5);

        usernameStudentField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("USERNAME");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setText("PASSWORD");

        passwordStudentField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        firstNameStudentField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setText("FIRST NAME");

        lastNameStudentField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setText("LAST NAME");

        emailStudentField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel20.setText("PHONE NUMBER");

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel31.setText("Enter Username");

        studentUsernameField2.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jButton8.setBackground(new java.awt.Color(133, 0, 0));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("SEARCH");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        curryCreateButton.setBackground(new java.awt.Color(133, 0, 0));
        curryCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        curryCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        curryCreateButton.setText("CREATE ACCOUNT");
        curryCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curryCreateButtonActionPerformed(evt);
            }
        });

        deleteButton10.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton10.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton10.setText("UPDATE ACCOUNT");
        deleteButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton10ActionPerformed(evt);
            }
        });

        deleteButton11.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton11.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton11.setText("DELETE ACCOUNT");
        deleteButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton11ActionPerformed(evt);
            }
        });

        deleteButton12.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton12.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton12.setText("CLEAR");
        deleteButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton12ActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel36.setText("EMAIL");

        phoneCurryField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(studentUsernameField2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jButton8))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jLabel31)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGap(430, 430, 430)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordStudentField2)
                            .addComponent(firstNameStudentField2)
                            .addComponent(usernameStudentField2)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastNameStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(437, 437, 437)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailStudentField2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneCurryField))))
                .addGap(368, 368, 368))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(curryCreateButton)
                .addGap(68, 68, 68)
                .addComponent(deleteButton10)
                .addGap(62, 62, 62)
                .addComponent(deleteButton11)
                .addGap(81, 81, 81)
                .addComponent(deleteButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(228, 228, 228))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addComponent(jLabel31)
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentUsernameField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(usernameStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(passwordStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(firstNameStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(emailStudentField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(phoneCurryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(curryCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(189, 189, 189))
        );

        jTabbedPane1.addTab("CURRY ADMINS", jPanel6);

        usernameStudentField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel11.setText("USERNAME");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("PASSWORD");

        passwordStudentField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        firstNameStudentField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setText("FIRST NAME");

        lastNameStudentField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("LAST NAME");

        emailStudentField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Enter Username");

        studentUsernameField1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jButton7.setBackground(new java.awt.Color(133, 0, 0));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("SEARCH");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        restaurantCreateButton.setBackground(new java.awt.Color(133, 0, 0));
        restaurantCreateButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        restaurantCreateButton.setForeground(new java.awt.Color(255, 255, 255));
        restaurantCreateButton.setText("CREATE ACCOUNT");
        restaurantCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaurantCreateButtonActionPerformed(evt);
            }
        });

        deleteButton6.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton6.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton6.setText("UPDATE ACCOUNT");
        deleteButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton6ActionPerformed(evt);
            }
        });

        deleteButton7.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton7.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton7.setText("DELETE ACCOUNT");
        deleteButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton7ActionPerformed(evt);
            }
        });

        deleteButton8.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton8.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton8.setText("CLEAR");
        deleteButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton8ActionPerformed(evt);
            }
        });

        numberRestaurantField.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel34.setText("PHONE NUMBER");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel35.setText("EMAIL");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(restaurantCreateButton)
                .addGap(61, 61, 61)
                .addComponent(deleteButton6)
                .addGap(52, 52, 52)
                .addComponent(deleteButton7)
                .addGap(48, 48, 48)
                .addComponent(deleteButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(studentUsernameField1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton7))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(1089, 1089, 1089)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameStudentField1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(passwordStudentField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameStudentField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailStudentField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStudentField1))
                        .addGap(349, 349, 349))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(numberRestaurantField, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(passwordStudentField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(usernameStudentField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameStudentField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(lastNameStudentField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(studentUsernameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton7))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(emailStudentField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)))
                .addGap(9, 9, 9)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberRestaurantField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addGap(119, 119, 119)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restaurantCreateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );

        jTabbedPane1.addTab("RESTAURANT MANAGERS", jPanel7);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("USERNAME");

        usernameStudentField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel38.setText("PASSWORD");

        passwordStudentField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel39.setText("FIRST NAME");

        firstNameStudentField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel40.setText("LAST NAME");

        lastNameStudentField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel41.setText("EMAIL");

        emailStudentField5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        numberRestaurantField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel42.setText("PHONE NUMBER");

        jButton11.setBackground(new java.awt.Color(133, 0, 0));
        jButton11.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("SEARCH");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        studentUsernameField5.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setText("Enter Username");

        restaurantCreateButton1.setBackground(new java.awt.Color(133, 0, 0));
        restaurantCreateButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        restaurantCreateButton1.setForeground(new java.awt.Color(255, 255, 255));
        restaurantCreateButton1.setText("CREATE ACCOUNT");
        restaurantCreateButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaurantCreateButton1ActionPerformed(evt);
            }
        });

        deleteButton9.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton9.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton9.setText("UPDATE ACCOUNT");
        deleteButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton9ActionPerformed(evt);
            }
        });

        deleteButton13.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton13.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton13.setText("DELETE ACCOUNT");
        deleteButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton13ActionPerformed(evt);
            }
        });

        deleteButton17.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton17.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton17.setText("CLEAR");
        deleteButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(restaurantCreateButton1)
                .addGap(61, 61, 61)
                .addComponent(deleteButton9)
                .addGap(52, 52, 52)
                .addComponent(deleteButton13)
                .addGap(48, 48, 48)
                .addComponent(deleteButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(studentUsernameField5, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jButton11))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1089, 1089, 1089)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameStudentField5, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(passwordStudentField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameStudentField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailStudentField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStudentField5))
                        .addGap(349, 349, 349))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(numberRestaurantField1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel38)
                            .addComponent(passwordStudentField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(usernameStudentField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(149, 149, 149)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(firstNameStudentField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel39))
                                .addGap(56, 56, 56)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel40)
                                    .addComponent(lastNameStudentField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(31, 31, 31)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(studentUsernameField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton11))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(emailStudentField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)))
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberRestaurantField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42))
                .addGap(119, 119, 119)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restaurantCreateButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );

        jTabbedPane1.addTab("POPEYE SALES", jPanel8);

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel43.setText("Enter Username");

        studentUsernameField6.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel44.setText("USERNAME");

        usernameStudentField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        passwordStudentField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel45.setText("PASSWORD");

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel46.setText("FIRST NAME");

        firstNameStudentField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        lastNameStudentField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel47.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel47.setText("LAST NAME");

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel48.setText("EMAIL");

        emailStudentField6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        numberRestaurantField2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel49.setText("PHONE NUMBER");

        jButton14.setBackground(new java.awt.Color(133, 0, 0));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton14.setForeground(new java.awt.Color(255, 255, 255));
        jButton14.setText("SEARCH");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        restaurantCreateButton2.setBackground(new java.awt.Color(133, 0, 0));
        restaurantCreateButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        restaurantCreateButton2.setForeground(new java.awt.Color(255, 255, 255));
        restaurantCreateButton2.setText("CREATE ACCOUNT");
        restaurantCreateButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restaurantCreateButton2ActionPerformed(evt);
            }
        });

        deleteButton21.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton21.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton21.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton21.setText("UPDATE ACCOUNT");
        deleteButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton21ActionPerformed(evt);
            }
        });

        deleteButton22.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton22.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton22.setText("DELETE ACCOUNT");
        deleteButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton22ActionPerformed(evt);
            }
        });

        deleteButton23.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton23.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton23.setText("CLEAR");
        deleteButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton23ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(668, 668, 668)
                .addComponent(jButton14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(1031, Short.MAX_VALUE)
                .addComponent(restaurantCreateButton2)
                .addGap(60, 60, 60)
                .addComponent(deleteButton21)
                .addGap(50, 50, 50)
                .addComponent(deleteButton22)
                .addGap(55, 55, 55)
                .addComponent(deleteButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(345, 345, 345)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(studentUsernameField6, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addComponent(jLabel43)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGap(747, 747, 747)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usernameStudentField6)
                            .addComponent(passwordStudentField6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameStudentField6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailStudentField6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameStudentField6))
                        .addComponent(numberRestaurantField2, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(346, 346, 346)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(471, Short.MAX_VALUE)
                .addComponent(jButton14)
                .addGap(264, 264, 264)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(restaurantCreateButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGap(90, 90, 90)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel45)
                                .addComponent(passwordStudentField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel9Layout.createSequentialGroup()
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel44)
                                .addComponent(usernameStudentField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(149, 149, 149)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(firstNameStudentField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel46))
                                    .addGap(56, 56, 56)
                                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel47)
                                        .addComponent(lastNameStudentField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel9Layout.createSequentialGroup()
                                    .addComponent(jLabel43)
                                    .addGap(31, 31, 31)
                                    .addComponent(studentUsernameField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel48)
                                .addComponent(emailStudentField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(53, 53, 53)))
                    .addGap(9, 9, 9)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numberRestaurantField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel49))
                    .addGap(208, 208, 208)))
        );

        jTabbedPane1.addTab("CURRY MARKETING", jPanel9);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 930));

        jButton13.setText("Logout");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1790, 90, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Frame 2 (9).png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setMinimumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        

suspendButton.setEnabled(false);
reinstateButton.setEnabled(false);
deleteButton.setEnabled(false);
statusButton.setEnabled(false);
              
        String student = "student";
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from student_info WHERE role = '"+student+"'");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
         
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from snell_admin_info");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       String student = "student";
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from student_info WHERE role = '"+student+"'");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bookingsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsTableMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_bookingsTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
         String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
         String username = studentUsernameField.getText();
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where username = '"+username+"' and status = '"+testStatus+"' and date >= '"+dd+"' and slot > '"+tt+"' " );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
        
        //String username = usernameTextField.getText();
        String timing = timeTextField.getText();
        String date = dateTextField.getText();
        String seat = classTextField.getText();
       
        DefaultTableModel HospitalTableModel = (DefaultTableModel)studentTable.getModel();
            int selectedRowIndex = studentTable.getSelectedRow();
        
       
         try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveHAStatement = (Statement) con.createStatement();
           
            String RemoveHASql = ("Delete from slot_info where username  = '"+username+"' AND date >= '"+dd+"' AND slot > '"+tt+"'");
           
           
            PreparedStatement RemoveHAPS = con.prepareStatement(RemoveHASql);
            RemoveHAPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null,"reservation cancelled/ record deleted" );
            // usernameTextField.setText("");
             //timeTextField.setText("");
             //dateTextField.setText("");
             //classTextField.setText("");
           
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
     
        suspendButton.setEnabled(false);
      reinstateButton.setEnabled(false);
      deleteButton.setEnabled(false);
      statusButton.setEnabled(false);
        String username = studentUsernameField.getText();
      if (username.equals("")) {
       suspendButton.setEnabled(false);
      reinstateButton.setEnabled(false);
      deleteButton.setEnabled(false);
      statusButton.setEnabled(false);
      
      }
      else {
       suspendButton.setEnabled(true);
      reinstateButton.setEnabled(true);
      }
      
      
          String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where (username = '"+username+"' and status = '"+testStatus+"' and date = '"+dd+"' and slot < '"+tt+"' ) or (username = '"+username+"' and status = '"+testStatus+"' and date < '"+dd+"' )" );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
      
      
      String state = "";
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("Account Status: SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("Account Status: ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
      
       
   
      
      
      
      
      
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, seat_name, time, date, status from slot_info where username ='"+username+"' ");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)studentTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("seat_name"),patientResultSet.getString("date"),patientResultSet.getString("time"),patientResultSet.getString("status")};

            washingtonModel.addRow(washington);
            }
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
         programStudentField.setVisible(false);
         programStudentLabel.setVisible(false);
          String usernamee = studentUsernameField.getText();
         String student = "student";
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, first_name, last_name, email, program, department from student_info where username = '"+usernamee+"' and role = '"+student+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("first_name");
          String lastName = resultSet.getString("last_name");
          String department = resultSet.getString("department");
           
           usernameStudentField.setText(usernameSlot);
            passwordStudentField.setText(password);
            emailStudentField.setText(email);
            firstNameStudentField.setText(firstName);
            lastNameStudentField.setText(lastName);
            
            departmentStudentField.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
    }//GEN-LAST:event_jButton5MouseClicked

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        // TODO add your handling code here:
        String username = studentUsernameField.getText();
        if (username.equals("")) {
        deleteButton.setEnabled(false);
        }
        else {
        deleteButton.setEnabled(true);
        }
        
        
        if (username.equals("")) {
        statusButton.setEnabled(false);
        }
        else {
        statusButton.setEnabled(true);
        }
        
           DefaultTableModel HospitalTableModel = (DefaultTableModel)studentTable.getModel();
            int selectedRowIndex = studentTable.getSelectedRow();         
            classTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 2));          
            timeTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 4));
            dateTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 3));
        
    }//GEN-LAST:event_studentTableMouseClicked

    private void suspendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspendButtonActionPerformed
        // TODO add your handling code here:
        suspendButton.setEnabled(true);
        reinstateButton.setEnabled(true);
        String username = studentUsernameField.getText();
          String suspended = "suspended";
           try{
            con = ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            
            String update = ("UPDATE student_info SET status = '"+suspended+"' WHERE username = '"+username+"' ");
             PreparedStatement slotPreparedStatement = con.prepareStatement(update);
            slotPreparedStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Student account suspended");
             
              String state = "";
      
      /* try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentsStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotsPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotsPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("Account status: SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("Account status: ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           } */
            
            
             
             //usernameTextField.setText("");
            // timeTextField.setText("");
            // classTextField.setText("");

            
            stateLabel.setText("Account status: SUSPENDED");
               stateLabel.setForeground(Color.red);
             

            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    

    }
    }//GEN-LAST:event_suspendButtonActionPerformed

    private void reinstateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinstateButtonActionPerformed
        // TODO add your handling code here:
        suspendButton.setEnabled(true);
        reinstateButton.setEnabled(true);  
        String username = studentUsernameField.getText();
             
          String reinstate = "";
           try{
            con = ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            
            String update = ("UPDATE student_info SET status = '"+reinstate+"' WHERE username = '"+username+"' ");
             PreparedStatement slotPreparedStatement = con.prepareStatement(update);
            slotPreparedStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Student account re-instated");
             
              String state = "";
      
       /*try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentssStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotssPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotssPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
              */
            
            
             
           //  usernameTextField.setText("");
            // timeTextField.setText("");
             //classTextField.setText("");

             stateLabel.setText("Account status: ACTIVE");
           stateLabel.setForeground(Color.green);
             

            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    

    }
          
    }//GEN-LAST:event_reinstateButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void statusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusButtonActionPerformed
        // TODO add your handling code here:
        String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
         String username = studentUsernameField.getText();
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where username = '"+username+"' and status = '"+testStatus+"' and date >= '"+dd+"' and slot > '"+tt+"' " );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
       
       String success = "Check-in succesful";
        try{
            con = ConnectionClass.getConnection();
            Statement updateStatement = (Statement) con.createStatement();
            

            String update = ("UPDATE slot_info SET status = '"+success+"' where username = '"+username+"'");

            PreparedStatement queryStatement = con.prepareStatement(update);
            queryStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Check-in successful");
            
            
             
         
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
        
       
       
        
    }//GEN-LAST:event_statusButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from curry_admin");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
           
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from restaurant_manager");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
           String faculty = "faculty";
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, first_name, last_name, password, email from student_info WHERE role = '"+faculty+"'");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("first_name"),patientResultSet.getString("last_name"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void deleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton1ActionPerformed
        // TODO add your handling code here:
   
    
        //validations
            String hosp =  "1"; 
            String match = "";
            String match1 = ""; 
            String match5 = ""; 
          try{        
            String DocSql = ("select username from student_info where username = '"+usernameStudentField.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
            }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            }
          
        if(hosp.equals("1") || usernameStudentField.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField.requestFocus();
        return;
        }
        
        if(passwordStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField.requestFocus();
        return;
        }
        
        else if(firstNameStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        firstNameStudentField.requestFocus();
        return;
        }
        
        else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField.requestFocus();
        return;
        }
        
        if(lastNameStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField.getText())){
        match5 = "1";        
        }
           
        if(match5.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField.requestFocus();
        return;
        }
        
        if (!(emailStudentField.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField.requestFocus();
        return;
            }
        
      /*  if(programStudentField.getSelectedItem().toString().equals("SELECT YOUR PROGRAM")){
        JOptionPane.showMessageDialog(this, "Please select program");
        programStudentField.requestFocus();
        return;
        }*/

          
        //------------------------------------------------------
          String username =  studentUsernameField.getText();
          String password = passwordStudentField.getText();
          String email = emailStudentField.getText();
          String firstName =  firstNameStudentField.getText();
          String lastName = lastNameStudentField.getText();
          String program = programStudentField.getSelectedItem().toString();
          String department =  departmentStudentField.getText();
          String role = "student";
          
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE student_info SET password = '"+password+"', email = '"+email+"', first_name = '"+firstName+"', last_name = '"+lastName+"', program = '"+program+"', department = '"+department+"' where username  = '"+username+"' and role = '"+role+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
             usernameStudentField.setText("");
            passwordStudentField.setText("");
            emailStudentField.setText("");
            firstNameStudentField.setText("");
            lastNameStudentField.setText("");
            programStudentField.setSelectedItem("college of engineering");
            departmentStudentField.setText("");
             
            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_deleteButton1ActionPerformed

    private void createStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createStudentActionPerformed

    private void deleteButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton3ActionPerformed
        // TODO add your handling code here:
         String username = studentUsernameField.getText(); 
        String student = "student";
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from student_info where username = '"+username+"' and role = 'student' ");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
              usernameStudentField.setText("");
            passwordStudentField.setText("");
            emailStudentField.setText("");
            firstNameStudentField.setText("");
            lastNameStudentField.setText("");
            programStudentField.setSelectedItem("SELECT YOUR PROGRAM");
            departmentStudentField.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton3ActionPerformed

    private void deleteButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton4ActionPerformed
        // TODO add your handling code here:
       programStudentField.setVisible(true);
       programStudentLabel.setVisible(true);
       programStudentField.setSelectedItem("SELECT YOUR PROGRAM");
        usernameStudentField.setText("");
            passwordStudentField.setText("");
            emailStudentField.setText("");
            firstNameStudentField.setText("");
            lastNameStudentField.setText("");
            programStudentField.setSelectedItem("SELECT YOUR PROGRAM");
            departmentStudentField.setText("");
    }//GEN-LAST:event_deleteButton4ActionPerformed

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
      
        String username = studentUsernameField1.getText();
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, first_name, last_name, email, phone_no from restaurant_manager where username = '"+username+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("first_name");
          String lastName = resultSet.getString("last_name");
          String department = resultSet.getString("phone_no");
           
           usernameStudentField1.setText(usernameSlot);
            passwordStudentField1.setText(password);
            emailStudentField1.setText(email);
            firstNameStudentField1.setText(firstName);
            lastNameStudentField1.setText(lastName);
            
            numberRestaurantField.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
          String username = studentUsernameField2.getText();
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, first_name, last_name, email, phone from curry_admin where username = '"+username+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("first_name");
          String lastName = resultSet.getString("last_name");
          String department = resultSet.getString("phone");
           
           usernameStudentField2.setText(usernameSlot);
            passwordStudentField2.setText(password);
            emailStudentField2.setText(email);
            firstNameStudentField2.setText(firstName);
            lastNameStudentField2.setText(lastName);
            
            phoneCurryField.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String username = studentUsernameField3.getText();
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, first_name, last_name, email, phone_number from snell_admin_info where username = '"+username+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("first_name");
          String lastName = resultSet.getString("last_name");
          String department = resultSet.getString("phone_number");
           
           usernameStudentField3.setText(usernameSlot);
            passwordStudentField3.setText(password);
            emailStudentField3.setText(email);
            firstNameStudentField3.setText(firstName);
            lastNameStudentField3.setText(lastName);
            
            phoneSnellField.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
       
         String faculty = "faculty";
         String usernameSlot = "";
         String password = "";
         String email = "";
         String firstName = "";
         String lastName = "";
         String department = "";
         departmentFacultyField.setVisible(false);
         departmentLabel.setVisible(false);
          String username = studentUsernameField4.getText();
         
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, first_name, last_name, email, department from student_info where username = '"+username+"' and role = '"+faculty+"'" );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           usernameSlot = resultSet.getString("username");
           password = resultSet.getString("password");
           email = resultSet.getString ("email");
           firstName = resultSet.getString("first_name");
           lastName = resultSet.getString("last_name");
           department = resultSet.getString("department");
           
           usernameStudentField4.setText(usernameSlot);
            passwordStudentField4.setText(password);
            emailStudentField4.setText(email);
            firstNameStudentField4.setText(firstName);
            lastNameStudentField4.setText(lastName);
            
            departmentFacultyField.setSelectedItem(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
      
           
           
         
    }//GEN-LAST:event_jButton10ActionPerformed

    private void restaurantCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaurantCreateButtonActionPerformed
        // TODO add your handling code here:
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from restaurant_manager where username = '"+usernameStudentField1.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField1.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField1.requestFocus();
        return;
        }
        
        if(usernameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField1.requestFocus();
        return;
        }
       
        else if(passwordStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField1.requestFocus();
        return;
        }
         else if(firstNameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField1.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField1.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField1.requestFocus();
        return;
        }
        
        if(lastNameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField1.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField1.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField1.requestFocus();
        return;
        }
        
        if (!(emailStudentField1.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField1.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField.requestFocus();
        return;
        }
        
       
        
        
        
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into restaurant_manager values (?,?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(2, usernameStudentField1.getText());
            Patient.setString(3, passwordStudentField1.getText());
            Patient.setString(7, emailStudentField1.getText());
            Patient.setString(1, "Popeye");
            Patient.setString(4, firstNameStudentField1.getText());
            Patient.setString(5, lastNameStudentField1.getText());
            Patient.setString(6, numberRestaurantField.getText());
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField1.setText("");
            passwordStudentField1.setText("");
            emailStudentField1.setText("");
            firstNameStudentField1.setText("");
            lastNameStudentField1.setText("");
           
            numberRestaurantField.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
     
         
            
    }//GEN-LAST:event_restaurantCreateButtonActionPerformed

    private void deleteButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton6ActionPerformed
        // TODO add your handling code here:
        //Validations
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from restaurant_manager where username = '"+usernameStudentField1.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp.equals("1") || usernameStudentField1.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField1.requestFocus();
        return;
        }
        
        if(usernameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField1.requestFocus();
        return;
        }
       
        else if(passwordStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField1.requestFocus();
        return;
        }
         else if(firstNameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField1.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField1.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField1.requestFocus();
        return;
        }
        
        if(lastNameStudentField1.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField1.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField1.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField1.requestFocus();
        return;
        }
        
        if (!(emailStudentField1.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField1.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField.requestFocus();
        return;
        }
      
        
        
        //----------------------------------------------------------------------
          String username =  studentUsernameField1.getText();
          String password = passwordStudentField1.getText();
          String email = emailStudentField1.getText();
          String firstName =  firstNameStudentField1.getText();
          String lastName = lastNameStudentField1.getText();
          String phone = numberRestaurantField.getText();
          
         
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE restaurant_manager SET password = '"+password+"', email = '"+email+"', first_name = '"+firstName+"', last_name = '"+lastName+"', phone_no = '"+phone+"' where username  = '"+username+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
              usernameStudentField1.setText("");
            passwordStudentField1.setText("");
            emailStudentField1.setText("");
            firstNameStudentField1.setText("");
            lastNameStudentField1.setText("");
           
            numberRestaurantField.setText("");
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_deleteButton6ActionPerformed

    private void deleteButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton7ActionPerformed
        // TODO add your handling code here:
         String username = studentUsernameField1.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from restaurant_manager where username = '"+username+"'");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            
             usernameStudentField1.setText("");
            passwordStudentField1.setText("");
            emailStudentField1.setText("");
            firstNameStudentField1.setText("");
            lastNameStudentField1.setText("");
           
            numberRestaurantField.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton7ActionPerformed

    private void deleteButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton8ActionPerformed
        // TODO add your handling code here:
        usernameStudentField1.setText("");
            passwordStudentField1.setText("");
            emailStudentField1.setText("");
            firstNameStudentField1.setText("");
            lastNameStudentField1.setText("");
            
            numberRestaurantField.setText("");
    }//GEN-LAST:event_deleteButton8ActionPerformed

    private void curryCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curryCreateButtonActionPerformed
        // TODO add your handling code here:
         String match = "";
        String match1 = "";
        String match2 = "";
        String match3 = "";
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from curry_admin where username = '"+usernameStudentField2.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField2.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField2.requestFocus();
        return;
        }
        
        if(usernameStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField2.requestFocus();
        return;
        }
       
        else if(passwordStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField2.requestFocus();
        return;
        }
         else if(firstNameStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        firstNameStudentField2.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField2.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"First Name Only In Alphabets");
        firstNameStudentField2.requestFocus();
        return;
        }
        
        if(lastNameStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField2.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField2.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField2.requestFocus();
        return;
        }
        
        if (!(emailStudentField2.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField2.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", phoneCurryField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        phoneCurryField.requestFocus();
        return;
        }
        
       
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into curry_admin values (?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField2.getText());
            Patient.setString(2, passwordStudentField2.getText());
            Patient.setString(6, emailStudentField2.getText());
            
            Patient.setString(3, firstNameStudentField2.getText());
            Patient.setString(4, lastNameStudentField2.getText());
            Patient.setString(5, phoneCurryField.getText());
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField2.setText("");
            passwordStudentField2.setText("");
            emailStudentField2.setText("");
            firstNameStudentField2.setText("");
            lastNameStudentField2.setText("");
            
            phoneCurryField.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
     
        
      
    }//GEN-LAST:event_curryCreateButtonActionPerformed

    private void deleteButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton10ActionPerformed
        // TODO add your handling code here:
        //Validations
         String match = "";
        String match1 = "";
        String match2 = "";
        String match3 = "";
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from curry_admin where username = '"+usernameStudentField2.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp.equals("1") || usernameStudentField2.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField2.requestFocus();
        return;
        }
        
        
        else if(passwordStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField2.requestFocus();
        return;
        }
         else if(firstNameStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        firstNameStudentField2.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField2.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"First Name Only In Alphabets");
        firstNameStudentField2.requestFocus();
        return;
        }
        
        if(lastNameStudentField2.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField2.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField2.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField2.requestFocus();
        return;
        }
        
        if (!(emailStudentField2.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField2.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", phoneCurryField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        phoneCurryField.requestFocus();
        return;
        }
        
        
        //----------------------------------------------------------------------
        
        String username =  studentUsernameField2.getText();
          String password = passwordStudentField2.getText();
          String email = emailStudentField2.getText();
          String firstName =  firstNameStudentField2.getText();
          String lastName = lastNameStudentField2.getText();
          String phone = phoneCurryField.getText();
         
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE curry_admin SET password = '"+password+"', email = '"+email+"', first_name = '"+firstName+"', last_name = '"+lastName+"', phone = '"+phone+"' where username  = '"+username+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
              usernameStudentField2.setText("");
            passwordStudentField2.setText("");
            emailStudentField2.setText("");
            firstNameStudentField2.setText("");
            lastNameStudentField2.setText("");
            
            phoneCurryField.setText("");
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_deleteButton10ActionPerformed

    private void deleteButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton11ActionPerformed
        // TODO add your handling code here:
         String username = studentUsernameField2.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from curry_admin where username = '"+username+"'");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            
               usernameStudentField2.setText("");
            passwordStudentField2.setText("");
            emailStudentField2.setText("");
            firstNameStudentField2.setText("");
            lastNameStudentField2.setText("");
            
            phoneCurryField.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton11ActionPerformed

    private void deleteButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton12ActionPerformed
        // TODO add your handling code here:
           usernameStudentField2.setText("");
            passwordStudentField2.setText("");
            emailStudentField2.setText("");
            firstNameStudentField2.setText("");
            lastNameStudentField2.setText("");
            
            phoneCurryField.setText("");
    }//GEN-LAST:event_deleteButton12ActionPerformed

    private void snellCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snellCreateButtonActionPerformed
        // TODO add your handling code here:
        String match = "";
        String match1 = ""; 
        String match2 = "";
        String match3 = "";
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from snell_admin_info where username = '"+usernameStudentField3.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField3.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField3.requestFocus();
        return;
        }
        
        if(usernameStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField3.requestFocus();
        return;
        }
       
        else if(passwordStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField3.requestFocus();
        return;
        }
         else if(firstNameStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField3.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField3.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField3.requestFocus();
        return;
        }
        
        if(lastNameStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField3.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField3.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        lastNameStudentField3.requestFocus();
        return;
        }
        
         if (!(emailStudentField3.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField3.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", phoneSnellField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter 10 digit no");
        phoneSnellField.requestFocus();
        return;
        }
        
         
        
      
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into snell_admin_info values (?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField3.getText());
            Patient.setString(2, passwordStudentField3.getText());
            Patient.setString(6, emailStudentField3.getText());
            Patient.setString(5, phoneSnellField.getText());
            Patient.setString(3, firstNameStudentField3.getText());
            Patient.setString(4, lastNameStudentField3.getText());
            
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField3.setText("");
            passwordStudentField3.setText("");
            emailStudentField3.setText("");
            firstNameStudentField3.setText("");
            lastNameStudentField3.setText("");
            
            phoneSnellField.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
    }//GEN-LAST:event_snellCreateButtonActionPerformed

    private void deleteButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton14ActionPerformed
        // TODO add your handling code here:
        //validations
        String match = "";
        String match1 = ""; 
        String match2 = "";
        String match3 = "";
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from snell_admin_info where username = '"+usernameStudentField3.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp.equals("1") || usernameStudentField3.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField3.requestFocus();
        return;
        }

       
        else if(passwordStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField3.requestFocus();
        return;
        }
        
        else if(firstNameStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField3.requestFocus();
        return;
        }
        
        else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField3.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField3.requestFocus();
        return;
        }
        
        if(lastNameStudentField3.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField3.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField3.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        lastNameStudentField3.requestFocus();
        return;
        }
        
         if (!(emailStudentField3.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField3.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", phoneSnellField.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter 10 digit no");
        phoneSnellField.requestFocus();
        return;
        }
        
       
        
          
        //------------------------------------------------------
        
        
        
        
           String username =  studentUsernameField3.getText();
          String password = passwordStudentField3.getText();
          String email = emailStudentField3.getText();
          String firstName =  firstNameStudentField3.getText();
          String lastName = lastNameStudentField3.getText();
          String phone = phoneSnellField.getText();
         
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE snell_admin_info SET password = '"+password+"', email = '"+email+"', first_name = '"+firstName+"', last_name = '"+lastName+"', phone_number = '"+phone+"' where username  = '"+username+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
              usernameStudentField3.setText("");
            passwordStudentField3.setText("");
            emailStudentField3.setText("");
            firstNameStudentField3.setText("");
            lastNameStudentField3.setText("");
            
            phoneSnellField.setText("");
            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_deleteButton14ActionPerformed

    private void deleteButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton15ActionPerformed
        // TODO add your handling code here:
         String username = studentUsernameField3.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from snell_admin_info where username = '"+username+"'");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            usernameStudentField3.setText("");
            passwordStudentField3.setText("");
            emailStudentField3.setText("");
            firstNameStudentField3.setText("");
            lastNameStudentField3.setText("");
            
            phoneSnellField.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton15ActionPerformed

    private void deleteButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton16ActionPerformed
        // TODO add your handling code here:
        usernameStudentField3.setText("");
            passwordStudentField3.setText("");
            emailStudentField3.setText("");
            firstNameStudentField3.setText("");
            lastNameStudentField3.setText("");
            
            phoneSnellField.setText("");
    }//GEN-LAST:event_deleteButton16ActionPerformed

    private void facultyCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyCreateButtonActionPerformed
        // TODO add your handling code here:
         String match = "";
        String match1 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from student_info where username = '"+usernameStudentField4.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField4.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField4.requestFocus();
        return;
        }
        
        if(usernameStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField4.requestFocus();
        return;
        }
       
        else if(passwordStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField4.requestFocus();
        return;
        }
         else if(firstNameStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField4.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField4.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"First Name Only In Alphabets");
        firstNameStudentField4.requestFocus();
        return;
        }
        
        if(lastNameStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        firstNameStudentField4.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField4.getText())){
        match1 = "1";        
        }
           
        if(match1.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField4.requestFocus();
        return;
        }
        
        if (!(emailStudentField4.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
         emailStudentField4.requestFocus();
        return;
            }
        
        if(departmentFacultyField.getSelectedItem().toString().equals("SELECT DEPARTMENT")){
        JOptionPane.showMessageDialog(this, "Please Select Department");
        departmentFacultyField.requestFocus();
        return;
        }
        
         String faculty = "faculty";
         double husky = 1000.00;
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into student_info values (?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField4.getText());
            Patient.setString(2, passwordStudentField4.getText());
            Patient.setString(3, emailStudentField4.getText());
            Patient.setDouble(4, husky);
            Patient.setString(5, firstNameStudentField4.getText());
            Patient.setString(6, lastNameStudentField4.getText());
            Patient.setString(7, null);
            Patient.setString(8, null);
            Patient.setString(9, departmentFacultyField.getSelectedItem().toString());
            Patient.setString(10, "active");
            Patient.setString(11, faculty);
            
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField4.setText("");
            passwordStudentField4.setText("");
            emailStudentField4.setText("");
            firstNameStudentField4.setText("");
            lastNameStudentField4.setText("");
            
            departmentFacultyField.setSelectedItem("SELECT DEPARTMENT");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
    }//GEN-LAST:event_facultyCreateButtonActionPerformed

    private void deleteButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton18ActionPerformed
        // TODO add your handling code here:
        //validations
            String hosp =  "1"; 
            String match = "";
            String match1 = ""; 
            String match5 = ""; 
          try{        
            con = ConnectionClass.getConnection();  
            String DocSql = ("select username from student_info where username = '"+usernameStudentField4.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
            }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            }
          
        if(hosp.equals("1") || usernameStudentField4.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField4.requestFocus();
        return;
        }
        
        else if(passwordStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField4.requestFocus();
        return;
        }
         else if(firstNameStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField4.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField4.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"First Name Only In Alphabets");
        firstNameStudentField4.requestFocus();
        return;
        }
        
        if(lastNameStudentField4.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        firstNameStudentField4.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField4.getText())){
        match1 = "1";        
        }
           
        if(match1.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField4.requestFocus();
        return;
        }
        
        if (!(emailStudentField4.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
         emailStudentField4.requestFocus();
        return;
            }
        
    /*    if(departmentFacultyField.getSelectedItem().toString().equals("SELECT DEPARTMENT")){
        JOptionPane.showMessageDialog(this, "Please Select Department");
        departmentFacultyField.requestFocus();
        return;
        } */
        
          
        //------------------------------------------------------
    
        
        
        
        String username =  studentUsernameField4.getText();
          String password = passwordStudentField4.getText();
          String email = emailStudentField4.getText();
          String firstName =  firstNameStudentField4.getText();
          String lastName = lastNameStudentField4.getText();
          String program = departmentFacultyField.getSelectedItem().toString();
         
          String role = "faculty";
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE student_info SET password = '"+password+"', email = '"+email+"', first_name = '"+firstName+"', last_name = '"+lastName+"', program = '"+program+"' where username  = '"+username+"' and role = '"+role+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
             usernameStudentField4.setText("");
            passwordStudentField4.setText("");
            emailStudentField4.setText("");
            firstNameStudentField4.setText("");
            lastNameStudentField4.setText("");
            
            departmentFacultyField.setSelectedItem("SELECT DEPARTMENT");
            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
        
    }//GEN-LAST:event_deleteButton18ActionPerformed

    private void deleteButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton19ActionPerformed
        // TODO add your handling code here:
        String faculty = "faculty";
        String username = studentUsernameField4.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from student_info where username = '"+username+"' and role = 'faculty' ");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            usernameStudentField4.setText("");
            passwordStudentField4.setText("");
            emailStudentField4.setText("");
            firstNameStudentField4.setText("");
            lastNameStudentField4.setText("");
            
            departmentFacultyField.setSelectedItem("SELECT DEPARTMENT");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton19ActionPerformed

    private void deleteButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton20ActionPerformed
        // TODO add your handling code here:
        departmentFacultyField.setVisible(true); 
        departmentLabel.setVisible(true);
        usernameStudentField4.setText("");
            passwordStudentField4.setText("");
            emailStudentField4.setText("");
            firstNameStudentField4.setText("");
            lastNameStudentField4.setText("");
            
            departmentFacultyField.setSelectedItem("college of engineering");
        
    }//GEN-LAST:event_deleteButton20ActionPerformed

    private void programStudentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programStudentFieldActionPerformed
        // TODO add your handling code here:
         String communityFinal = programStudentField.getSelectedItem().toString();
        if (communityFinal.equals("information systems")) {
        departmentStudentField.setText("college of engineering");
        }
        else if (communityFinal.equals("engineering management")) {
        departmentStudentField.setText("college of engineering");
        } 
        else if (communityFinal.equals("computer science")) {
        departmentStudentField.setText("khoury college of computer science");
        }
        else if (communityFinal.equals("data science")) {
        departmentStudentField.setText("khoury college of computer science");
        }
        
        else if (communityFinal.equals("SELECT YOUR PROGRAM")) {
        departmentStudentField.setText("SELECT PROGRAM TO GET DEPARTMENT");
        }
    }//GEN-LAST:event_programStudentFieldActionPerformed

    private void createStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createStudentMouseClicked
        // TODO add your handling code here:
         String match = "";
        String match1 = ""; 
        String match5 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from student_info where username = '"+usernameStudentField.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameField.requestFocus();
        return;
        }
        
        if(usernameStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameField.requestFocus();
        return;
        }
       
        else if(passwordStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField.requestFocus();
        return;
        }
        
         else if(firstNameStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        firstNameStudentField.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField.requestFocus();
        return;
        }
        
        if(lastNameStudentField.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Last Name Required");
        lastNameStudentField.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField.getText())){
        match5 = "1";        
        }
           
        if(match5.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField.requestFocus();
        return;
        }
        
        if (!(emailStudentField.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Email");
        emailStudentField.requestFocus();
        return;
            }
        
        if(programStudentField.getSelectedItem().toString().equals("SELECT YOUR PROGRAM")){
        JOptionPane.showMessageDialog(this, "Please select program");
        programStudentField.requestFocus();
        return;
        }
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into student_info values (?,?,?,?,?,?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField.getText());
            Patient.setString(2, passwordStudentField.getText());
            Patient.setString(3, emailStudentField.getText());
            Patient.setDouble(4, 100.00);
            Patient.setString(5, firstNameStudentField.getText());
            Patient.setString(6, lastNameStudentField.getText());
            Patient.setString(7, null);
            Patient.setString(8, programStudentField.getSelectedItem().toString());
            Patient.setString(9, departmentStudentField.getText());
            Patient.setString(10, "active");
            Patient.setString(11, student);
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField.setText("");
            passwordStudentField.setText("");
            emailStudentField.setText("");
            firstNameStudentField.setText("");
            lastNameStudentField.setText("");
            programStudentField.setSelectedItem("SELECT YOUR PROGRAM");
            departmentStudentField.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
    }//GEN-LAST:event_createStudentMouseClicked

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        new NEUHomePage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void emailStudentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailStudentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailStudentFieldActionPerformed

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
          String username = studentUsernameField5.getText();
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, firstname, lastname, email, phone_no from popeye_sales where username = '"+username+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("firstname");
          String lastName = resultSet.getString("lastname");
          String department = resultSet.getString("phone_no");
           
           usernameStudentField5.setText(usernameSlot);
            passwordStudentField5.setText(password);
            emailStudentField5.setText(email);
            firstNameStudentField5.setText(firstName);
            lastNameStudentField5.setText(lastName);
            
            numberRestaurantField1.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void restaurantCreateButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaurantCreateButton1ActionPerformed
        // TODO add your handling code here:
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from popeye_sales where username = '"+usernameStudentField5.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField5.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField5.requestFocus();
        return;
        }
        
        if(usernameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField5.requestFocus();
        return;
        }
       
        else if(passwordStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField5.requestFocus();
        return;
        }
         else if(firstNameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField5.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField5.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField5.requestFocus();
        return;
        }
        
        if(lastNameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField5.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField5.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField5.requestFocus();
        return;
        }
        
        if (!(emailStudentField5.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField5.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField1.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField1.requestFocus();
        return;
        }
        
       
        
        
        
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into popeye_sales values (?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField5.getText());
            Patient.setString(2, passwordStudentField5.getText());
            Patient.setString(5, emailStudentField5.getText());
            
            Patient.setString(3, firstNameStudentField5.getText());
            Patient.setString(4, lastNameStudentField5.getText());
            Patient.setString(6, numberRestaurantField1.getText());
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField5.setText("");
            passwordStudentField5.setText("");
            emailStudentField5.setText("");
            firstNameStudentField5.setText("");
            lastNameStudentField5.setText("");
           
            numberRestaurantField1.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }
    }//GEN-LAST:event_restaurantCreateButton1ActionPerformed

    private void deleteButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton9ActionPerformed
        // TODO add your handling code here:
        //Validations
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from popeye_sales where username = '"+usernameStudentField5.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp.equals("1") || usernameStudentField5.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField5.requestFocus();
        return;
        }
        
        if(usernameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField5.requestFocus();
        return;
        }
       
        else if(passwordStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField5.requestFocus();
        return;
        }
         else if(firstNameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField5.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField5.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField5.requestFocus();
        return;
        }
        
        if(lastNameStudentField5.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField5.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField5.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField5.requestFocus();
        return;
        }
        
        if (!(emailStudentField5.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField5.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField1.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField1.requestFocus();
        return;
        }
      
        
        
        //----------------------------------------------------------------------
          String username =  studentUsernameField5.getText();
          String password = passwordStudentField5.getText();
          String email = emailStudentField5.getText();
          String firstName =  firstNameStudentField5.getText();
          String lastName = lastNameStudentField5.getText();
          String phone = numberRestaurantField1.getText();
          
         
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE popeye_sales SET password = '"+password+"', email = '"+email+"', firstname = '"+firstName+"', lastname = '"+lastName+"', phone_no = '"+phone+"' where username  = '"+username+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
              usernameStudentField5.setText("");
            passwordStudentField5.setText("");
            emailStudentField5.setText("");
            firstNameStudentField5.setText("");
            lastNameStudentField5.setText("");
           
            numberRestaurantField1.setText("");
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
        
    }//GEN-LAST:event_deleteButton9ActionPerformed

    private void deleteButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton13ActionPerformed
        // TODO add your handling code here:
          String username = studentUsernameField5.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from popeye_sales where username = '"+username+"'");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            
             usernameStudentField5.setText("");
            passwordStudentField5.setText("");
            emailStudentField5.setText("");
            firstNameStudentField5.setText("");
            lastNameStudentField5.setText("");
           
            numberRestaurantField1.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton13ActionPerformed

    private void deleteButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton17ActionPerformed
        // TODO add your handling code here:
         usernameStudentField5.setText("");
            passwordStudentField5.setText("");
            emailStudentField5.setText("");
            firstNameStudentField5.setText("");
            lastNameStudentField5.setText("");
           
            numberRestaurantField1.setText("");
    }//GEN-LAST:event_deleteButton17ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, firstname, lastname, password, email from popeye_sales");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("firstname"),patientResultSet.getString("lastname"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
                      
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14MouseClicked

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        String username = studentUsernameField6.getText();
        
        try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select username, password, firstname, lastname, email, phone_no from curry_marketing where username = '"+username+"' ");
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
          String usernameSlot = resultSet.getString("username");
          String password = resultSet.getString("password");
          String email = resultSet.getString ("email");
          String firstName = resultSet.getString("firstname");
          String lastName = resultSet.getString("lastname");
          String department = resultSet.getString("phone_no");
           
           usernameStudentField6.setText(usernameSlot);
            passwordStudentField6.setText(password);
            emailStudentField6.setText(email);
            firstNameStudentField6.setText(firstName);
            lastNameStudentField6.setText(lastName);
            
            numberRestaurantField2.setText(department);
           }
       } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void restaurantCreateButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restaurantCreateButton2ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from curry_marketing where username = '"+usernameStudentField6.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp != "1" || usernameStudentField6.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"exists in system or is blank, try another ID");
        usernameStudentField6.requestFocus();
        return;
        }
        
        if(usernameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField6.requestFocus();
        return;
        }
       
        else if(passwordStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField6.requestFocus();
        return;
        }
         else if(firstNameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField6.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField6.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField6.requestFocus();
        return;
        }
        
        if(lastNameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField6.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField6.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField6.requestFocus();
        return;
        }
        
        if (!(emailStudentField6.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField6.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField2.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField2.requestFocus();
        return;
        }
        
       
        
        
        
        
         String student = "student";
        
        try{  
           
            con = ConnectionClass.getConnection();
            Statement HospitalAdminStatement = (Statement) con.createStatement();
           
            
           
            String PatientSql = "Insert into curry_marketing values (?,?,?,?,?,?)";
            PreparedStatement Patient = con.prepareStatement(PatientSql);
           
            
           
            Patient.setString(1, usernameStudentField6.getText());
            Patient.setString(2, passwordStudentField6.getText());
            Patient.setString(5, emailStudentField6.getText());
            
            Patient.setString(3, firstNameStudentField6.getText());
            Patient.setString(4, lastNameStudentField6.getText());
            Patient.setString(6, numberRestaurantField2.getText());
           
            
            Patient.executeUpdate();
           
            JOptionPane.showMessageDialog(null,"Account Created Succesfully");
            con.close();
            
            usernameStudentField6.setText("");
            passwordStudentField6.setText("");
            emailStudentField6.setText("");
            firstNameStudentField6.setText("");
            lastNameStudentField6.setText("");
           
            numberRestaurantField2.setText("");
            
           
        }    catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
   
    }

    }//GEN-LAST:event_restaurantCreateButton2ActionPerformed

    private void deleteButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton21ActionPerformed
        // TODO add your handling code here:
              //Validations
        String match = "";
        String match1 = ""; 
        String match2 = ""; 
        String match3 = ""; 
        String hosp =  "1";    
        try{
           con = ConnectionClass.getConnection();
            
            String DocSql = ("select username from curry_marketing where username = '"+usernameStudentField6.getText()+"' ");
            PreparedStatement DocPreparedStatement = con.prepareStatement(DocSql);            
            ResultSet commResultSet = DocPreparedStatement.executeQuery();
            while(commResultSet.next())
            {
            hosp = commResultSet.getString("username");
            }
 
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
        }
       
        if(hosp.equals("1") || usernameStudentField6.getText().equals(""))  {
        JOptionPane.showMessageDialog(null,"Updating username is prohibited");
        usernameStudentField6.requestFocus();
        return;
        }
        
        if(usernameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Username Required");
        usernameStudentField6.requestFocus();
        return;
        }
       
        else if(passwordStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Password Required");
        passwordStudentField6.requestFocus();
        return;
        }
         else if(firstNameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"Name Required");
        firstNameStudentField6.requestFocus();
        return;
        }
        
         else if(Pattern.matches("[a-zA-Z ]+", firstNameStudentField6.getText())){
        match = "1";        
        }
           
        else if(match.equals("")){
        JOptionPane.showMessageDialog(null,"Name Only In Alphabets");
        firstNameStudentField6.requestFocus();
        return;
        }
        
        if(lastNameStudentField6.getText().equals("")) {
        JOptionPane.showMessageDialog(null,"First Name Required");
        lastNameStudentField6.requestFocus();
        return;
        }
        
        if(Pattern.matches("[a-zA-Z ]+", lastNameStudentField6.getText())){
        match3 = "1";        
        }
           
        if(match3.equals("")){
        JOptionPane.showMessageDialog(null,"Last Name Only In Alphabets");
        lastNameStudentField6.requestFocus();
        return;
        }
        
        if (!(emailStudentField6.getText().matches("^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$"))) {
        JOptionPane.showMessageDialog(this, "Please enter valid Employee Email");
        emailStudentField6.requestFocus();
        return;
            }
        
        if(Pattern.matches("[0-9]{10}+", numberRestaurantField2.getText())){
        match2 = "1";        
        }      
        
        if(match2.equals("")){
        JOptionPane.showMessageDialog(null,"Make sure to enter valid number");
        numberRestaurantField2.requestFocus();
        return;
        }
      
        
        
        //----------------------------------------------------------------------
          String username =  studentUsernameField6.getText();
          String password = passwordStudentField6.getText();
          String email = emailStudentField6.getText();
          String firstName =  firstNameStudentField6.getText();
          String lastName = lastNameStudentField6.getText();
          String phone = numberRestaurantField2.getText();
          
         
        
        try{
            con = ConnectionClass.getConnection();
            
            String doctorSql = ("UPDATE curry_marketing SET password = '"+password+"', email = '"+email+"', firstname = '"+firstName+"', lastname = '"+lastName+"', phone_no = '"+phone+"' where username  = '"+username+"' ");
            PreparedStatement doctorPreparedStatement = con.prepareStatement(doctorSql);
            doctorPreparedStatement.execute();
            
            
             JOptionPane.showMessageDialog(null,"Records updated succesfully");
              usernameStudentField6.setText("");
            passwordStudentField6.setText("");
            emailStudentField6.setText("");
            firstNameStudentField6.setText("");
            lastNameStudentField6.setText("");
           
            numberRestaurantField2.setText("");
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }

    }//GEN-LAST:event_deleteButton21ActionPerformed

    private void deleteButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton22ActionPerformed
        // TODO add your handling code here:
           String username = studentUsernameField6.getText(); 
        
        try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveDoctorStatement = (Statement) con.createStatement();
           
            String RemoveDoctorSql = ("Delete from curry_marketing where username = '"+username+"'");
           
           
            PreparedStatement RemoveDoctorPS = con.prepareStatement(RemoveDoctorSql);
            RemoveDoctorPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null," user '"+username+"' deleted " );
            
             usernameStudentField6.setText("");
            passwordStudentField6.setText("");
            emailStudentField6.setText("");
            firstNameStudentField6.setText("");
            lastNameStudentField6.setText("");
           
            numberRestaurantField2.setText("");
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButton22ActionPerformed

    private void deleteButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton23ActionPerformed
        // TODO add your handling code here:
         usernameStudentField6.setText("");
            passwordStudentField6.setText("");
            emailStudentField6.setText("");
            firstNameStudentField6.setText("");
            lastNameStudentField6.setText("");
           
            numberRestaurantField2.setText("");
    }//GEN-LAST:event_deleteButton23ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, firstname, lastname, password, email from curry_marketing");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("password"),patientResultSet.getString("firstname"),patientResultSet.getString("lastname"),patientResultSet.getString("email")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton15ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookingsTable;
    private javax.swing.JTextField classTextField;
    private javax.swing.JLabel countLabel;
    private javax.swing.JButton createStudent;
    private javax.swing.JButton curryCreateButton;
    private javax.swing.JTextField dateField;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton deleteButton1;
    private javax.swing.JButton deleteButton10;
    private javax.swing.JButton deleteButton11;
    private javax.swing.JButton deleteButton12;
    private javax.swing.JButton deleteButton13;
    private javax.swing.JButton deleteButton14;
    private javax.swing.JButton deleteButton15;
    private javax.swing.JButton deleteButton16;
    private javax.swing.JButton deleteButton17;
    private javax.swing.JButton deleteButton18;
    private javax.swing.JButton deleteButton19;
    private javax.swing.JButton deleteButton20;
    private javax.swing.JButton deleteButton21;
    private javax.swing.JButton deleteButton22;
    private javax.swing.JButton deleteButton23;
    private javax.swing.JButton deleteButton3;
    private javax.swing.JButton deleteButton4;
    private javax.swing.JButton deleteButton6;
    private javax.swing.JButton deleteButton7;
    private javax.swing.JButton deleteButton8;
    private javax.swing.JButton deleteButton9;
    private javax.swing.JComboBox<String> departmentFacultyField;
    private javax.swing.JLabel departmentLabel;
    private javax.swing.JTextField departmentStudentField;
    private javax.swing.JTextField emailStudentField;
    private javax.swing.JTextField emailStudentField1;
    private javax.swing.JTextField emailStudentField2;
    private javax.swing.JTextField emailStudentField3;
    private javax.swing.JTextField emailStudentField4;
    private javax.swing.JTextField emailStudentField5;
    private javax.swing.JTextField emailStudentField6;
    private javax.swing.JButton facultyCreateButton;
    private javax.swing.JTextField firstNameStudentField;
    private javax.swing.JTextField firstNameStudentField1;
    private javax.swing.JTextField firstNameStudentField2;
    private javax.swing.JTextField firstNameStudentField3;
    private javax.swing.JTextField firstNameStudentField4;
    private javax.swing.JTextField firstNameStudentField5;
    private javax.swing.JTextField firstNameStudentField6;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lastNameStudentField;
    private javax.swing.JTextField lastNameStudentField1;
    private javax.swing.JTextField lastNameStudentField2;
    private javax.swing.JTextField lastNameStudentField3;
    private javax.swing.JTextField lastNameStudentField4;
    private javax.swing.JTextField lastNameStudentField5;
    private javax.swing.JTextField lastNameStudentField6;
    private javax.swing.JTextField numberRestaurantField;
    private javax.swing.JTextField numberRestaurantField1;
    private javax.swing.JTextField numberRestaurantField2;
    private javax.swing.JPasswordField passwordStudentField;
    private javax.swing.JPasswordField passwordStudentField1;
    private javax.swing.JPasswordField passwordStudentField2;
    private javax.swing.JPasswordField passwordStudentField3;
    private javax.swing.JPasswordField passwordStudentField4;
    private javax.swing.JPasswordField passwordStudentField5;
    private javax.swing.JPasswordField passwordStudentField6;
    private javax.swing.JTextField phoneCurryField;
    private javax.swing.JTextField phoneSnellField;
    private javax.swing.JComboBox<String> programStudentField;
    private javax.swing.JLabel programStudentLabel;
    private javax.swing.JButton reinstateButton;
    private javax.swing.JButton restaurantCreateButton;
    private javax.swing.JButton restaurantCreateButton1;
    private javax.swing.JButton restaurantCreateButton2;
    private javax.swing.JTextField seatField;
    private javax.swing.JButton snellCreateButton;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JButton statusButton;
    private javax.swing.JTable studentTable;
    private javax.swing.JTextField studentUsernameField;
    private javax.swing.JTextField studentUsernameField1;
    private javax.swing.JTextField studentUsernameField2;
    private javax.swing.JTextField studentUsernameField3;
    private javax.swing.JTextField studentUsernameField4;
    private javax.swing.JTextField studentUsernameField5;
    private javax.swing.JTextField studentUsernameField6;
    private javax.swing.JButton suspendButton;
    private javax.swing.JTextField timeField;
    private javax.swing.JTextField timeTextField;
    public static javax.swing.JTextField usernameField;
    private javax.swing.JTextField usernameStudentField;
    private javax.swing.JTextField usernameStudentField1;
    private javax.swing.JTextField usernameStudentField2;
    private javax.swing.JTextField usernameStudentField3;
    private javax.swing.JTextField usernameStudentField4;
    private javax.swing.JTextField usernameStudentField5;
    private javax.swing.JTextField usernameStudentField6;
    // End of variables declaration//GEN-END:variables
}
