/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FinalProject;

import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.Timer;
/**
 *
 * @author hamza
 */
public class SnellAdminHomePage extends javax.swing.JFrame {

    /**
     * Creates new form SnellAdminHomePage
     */
    Connection con;
     Timer t;
    SimpleDateFormat st;
    SimpleDateFormat st1;
    public SnellAdminHomePage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        usernameField = new javax.swing.JTextField();
        seatField = new javax.swing.JTextField();
        timeField = new javax.swing.JTextField();
        dateField = new javax.swing.JTextField();
        timeTextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        classTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        usernameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        suspendButton = new javax.swing.JButton();
        reinstateButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        stateLabel = new javax.swing.JLabel();
        countLabel = new javax.swing.JLabel();
        statusButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        dateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateTextFieldActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setForeground(new java.awt.Color(133, 0, 0));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTabbedPane1.setMaximumSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1920, 928));
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        bookingsTable.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Username", "Seat Name", "Time", "Date", "Code", "Status", "Floor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bookingsTable.setGridColor(new java.awt.Color(255, 255, 255));
        bookingsTable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        bookingsTable.setSelectionForeground(new java.awt.Color(133, 0, 0));
        bookingsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookingsTable);
        if (bookingsTable.getColumnModel().getColumnCount() > 0) {
            bookingsTable.getColumnModel().getColumn(0).setResizable(false);
            bookingsTable.getColumnModel().getColumn(1).setResizable(false);
            bookingsTable.getColumnModel().getColumn(2).setResizable(false);
            bookingsTable.getColumnModel().getColumn(3).setResizable(false);
            bookingsTable.getColumnModel().getColumn(4).setResizable(false);
            bookingsTable.getColumnModel().getColumn(5).setResizable(false);
            bookingsTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jButton1.setBackground(new java.awt.Color(133, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("VIEW UPCOMING RESERVATIONS");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(133, 0, 0));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("VIEW ALL RESERVATIONS");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(601, 601, 601)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(426, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("VIEW BOOKINGS", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        usernameTextField.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Enter Student Username");

        deleteButton.setBackground(new java.awt.Color(133, 0, 0));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("CLEAR ALL UPCOMING RESERVATIONS");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        suspendButton.setBackground(new java.awt.Color(133, 0, 0));
        suspendButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        suspendButton.setForeground(new java.awt.Color(255, 255, 255));
        suspendButton.setText("SUSPEND STUDENT ACCOUNT");
        suspendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspendButtonActionPerformed(evt);
            }
        });

        reinstateButton.setBackground(new java.awt.Color(133, 0, 0));
        reinstateButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        reinstateButton.setForeground(new java.awt.Color(255, 255, 255));
        reinstateButton.setText("REINSTATE STUDENT ACCOUNT");
        reinstateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinstateButtonActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(133, 0, 0));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("SEARCH");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        stateLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N

        countLabel.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N

        statusButton.setBackground(new java.awt.Color(133, 0, 0));
        statusButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        statusButton.setForeground(new java.awt.Color(255, 255, 255));
        statusButton.setText("MARK ALL STATUS  AS CHECKED-IN");
        statusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusButtonActionPerformed(evt);
            }
        });

        studentTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Username", "Class", "Date", "Time", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.setGridColor(new java.awt.Color(255, 255, 255));
        studentTable.setSelectionForeground(new java.awt.Color(133, 0, 0));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(studentTable);
        if (studentTable.getColumnModel().getColumnCount() > 0) {
            studentTable.getColumnModel().getColumn(0).setResizable(false);
            studentTable.getColumnModel().getColumn(1).setResizable(false);
            studentTable.getColumnModel().getColumn(2).setResizable(false);
            studentTable.getColumnModel().getColumn(3).setResizable(false);
            studentTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton5)
                        .addGap(112, 112, 112)
                        .addComponent(stateLabel)
                        .addGap(235, 235, 235)
                        .addComponent(countLabel))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(suspendButton)
                        .addGap(103, 103, 103)
                        .addComponent(reinstateButton)
                        .addGap(95, 95, 95)
                        .addComponent(statusButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1843, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(stateLabel)
                    .addComponent(countLabel))
                .addGap(123, 123, 123)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(195, 195, 195)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suspendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reinstateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SEARCH STUDENT", jPanel3);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, -1, 930));

        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1790, 90, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Frame 2 (9).png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jLabel3.setMaximumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setMinimumSize(new java.awt.Dimension(1920, 1080));
        jLabel3.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        

suspendButton.setEnabled(false);
reinstateButton.setEnabled(false);
deleteButton.setEnabled(false);
statusButton.setEnabled(false);
              
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, seat_name, time, date, floor, status,code from slot_info");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("seat_name"),patientResultSet.getString("time"),patientResultSet.getString("date"),patientResultSet.getString("code"),patientResultSet.getString("status"),patientResultSet.getString("floor")};

            washingtonModel.addRow(washington);
            }
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
        
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
         Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
         String status = "Not checked-in";
         
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();
            
            
            
            String patientSql = ("Select username, seat_name, time, date, status, floor, code from slot_info where (date = '"+dd+"' and slot > '"+tt+"' ) or (date > '"+dd+"')");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("seat_name"),patientResultSet.getString("time"),patientResultSet.getString("date"),patientResultSet.getString("code"),patientResultSet.getString("status"),patientResultSet.getString("floor")};

            washingtonModel.addRow(washington);
            }
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
    
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, seat_name, time, date, floor, status,code from slot_info");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)bookingsTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("seat_name"),patientResultSet.getString("time"),patientResultSet.getString("date"),patientResultSet.getString("code"),patientResultSet.getString("status"),patientResultSet.getString("floor")};

            washingtonModel.addRow(washington);
            }
            } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void bookingsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingsTableMouseClicked
        // TODO add your handling code here:
         DefaultTableModel HospitalTableModel = (DefaultTableModel)bookingsTable.getModel();
            int selectedRowIndex = bookingsTable.getSelectedRow();
           
            usernameField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 0));          
            seatField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 1));          
            timeField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 2));

            dateField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 3));
            

    }//GEN-LAST:event_bookingsTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
         String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
         String username = usernameTextField.getText();
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where username = '"+username+"' and status = '"+testStatus+"' and date >= '"+dd+"' and slot > '"+tt+"' " );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
        
        
        //String username = usernameTextField.getText();
        String timing = timeTextField.getText();
        String date = dateTextField.getText();
        String seat = classTextField.getText();
       
        DefaultTableModel HospitalTableModel = (DefaultTableModel)studentTable.getModel();
            int selectedRowIndex = studentTable.getSelectedRow();
        
       
         try{                                      
            con = ConnectionClass.getConnection();
            Statement RemoveHAStatement = (Statement) con.createStatement();
           
            String RemoveHASql = ("Delete from slot_info where username  = '"+username+"' AND date >= '"+dd+"' AND slot > '"+tt+"'");
           
           
            PreparedStatement RemoveHAPS = con.prepareStatement(RemoveHASql);
            RemoveHAPS.executeUpdate();                    
            JOptionPane.showMessageDialog(null,"reservation cancelled/ record deleted" );
            // usernameTextField.setText("");
             //timeTextField.setText("");
             //dateTextField.setText("");
             //classTextField.setText("");
           
               
               
       
        }catch(Exception e)   {                                      
        JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void dateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateTextFieldActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
          
        
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
      suspendButton.setEnabled(false);
      reinstateButton.setEnabled(false);
      deleteButton.setEnabled(false);
      statusButton.setEnabled(false);
        String username = usernameTextField.getText();
      if (username.equals("")) {
       suspendButton.setEnabled(false);
      reinstateButton.setEnabled(false);
      deleteButton.setEnabled(false);
      statusButton.setEnabled(false);
      
      }
      else {
       suspendButton.setEnabled(true);
      reinstateButton.setEnabled(true);
      }
      
      
          String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where (username = '"+username+"' and status = '"+testStatus+"' and date = '"+dd+"' and slot < '"+tt+"' ) or (username = '"+username+"' and status = '"+testStatus+"' and date < '"+dd+"' )" );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
      
      
      String state = "";
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("Account Status: SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("Account Status: ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
      
       
   
      
      
      
      
      
        try{
            con =  ConnectionClass.getConnection();
            Statement doctorAppointmentStatement = (Statement) con.createStatement();

            String patientSql = ("Select username, seat_name, time, date, status from slot_info where username ='"+username+"' ");

            PreparedStatement patientPreparedStatement = con.prepareStatement(patientSql);
            ResultSet patientResultSet = patientPreparedStatement.executeQuery();
            DefaultTableModel washingtonModel = (DefaultTableModel)studentTable.getModel();
            washingtonModel.setRowCount(0);
            while(patientResultSet.next())
            {

            Object washington[] = { patientResultSet.getString("username"),patientResultSet.getString("seat_name"),patientResultSet.getString("date"),patientResultSet.getString("time"),patientResultSet.getString("status")};

            washingtonModel.addRow(washington);
            }
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    
    }
    }//GEN-LAST:event_jButton5MouseClicked

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        // TODO add your handling code here:
        String username = usernameTextField.getText();
        if (username.equals("")) {
        deleteButton.setEnabled(false);
        }
        else {
        deleteButton.setEnabled(true);
        }
        
        
        if (username.equals("")) {
        statusButton.setEnabled(false);
        }
        else {
        statusButton.setEnabled(true);
        }
        
        DefaultTableModel HospitalTableModel = (DefaultTableModel)studentTable.getModel();
            int selectedRowIndex = studentTable.getSelectedRow();
           
                    
            classTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 2));          
            timeTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 4));
            dateTextField.setText((String) HospitalTableModel.getValueAt(selectedRowIndex, 3));
        
    }//GEN-LAST:event_studentTableMouseClicked

    private void suspendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspendButtonActionPerformed
        // TODO add your handling code here:
        suspendButton.setEnabled(true);
        reinstateButton.setEnabled(true);
        String username = usernameTextField.getText();
          String suspended = "suspended";
           try{
            con = ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            
            String update = ("UPDATE student_info SET status = '"+suspended+"' WHERE username = '"+username+"' ");
             PreparedStatement slotPreparedStatement = con.prepareStatement(update);
            slotPreparedStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Student account suspended");
             
              String state = "";
      
      /* try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentsStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotsPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotsPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("Account status: SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("Account status: ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           } */
            
            
             
             //usernameTextField.setText("");
            // timeTextField.setText("");
            // classTextField.setText("");

            
            stateLabel.setText("Account status: SUSPENDED");
               stateLabel.setForeground(Color.red);
             

            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    

    }
    }//GEN-LAST:event_suspendButtonActionPerformed

    private void reinstateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinstateButtonActionPerformed
        // TODO add your handling code here:
        suspendButton.setEnabled(true);
        reinstateButton.setEnabled(true);  
        String username = usernameTextField.getText();
             
          String reinstate = "";
           try{
            con = ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            
            String update = ("UPDATE student_info SET status = '"+reinstate+"' WHERE username = '"+username+"' ");
             PreparedStatement slotPreparedStatement = con.prepareStatement(update);
            slotPreparedStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Student account re-instated");
             
              String state = "";
      
       /*try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentssStatement = (Statement) con.createStatement();
            String slotSql = ("Select status from student_info where username = '"+username+"'" );
            PreparedStatement slotssPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotssPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           state = resultSet.getString("status");
           }
           
           if (state.equals("suspended")) {
               stateLabel.setText("SUSPENDED");
               stateLabel.setForeground(Color.red);
           
           }
           else {
           stateLabel.setText("ACTIVE");
           stateLabel.setForeground(Color.green);
           }
            
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
              */
            
            
             
           //  usernameTextField.setText("");
            // timeTextField.setText("");
             //classTextField.setText("");

             stateLabel.setText("Account status: ACTIVE");
           stateLabel.setForeground(Color.green);
             

            
            
    
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
    

    }
          
    }//GEN-LAST:event_reinstateButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void statusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusButtonActionPerformed
        // TODO add your handling code here:
        String count = "";
       String testStatus = "Not checked-in";
       Date dt = new Date();
         st = new SimpleDateFormat("HH");
         String tt = st.format(dt); 
         int tti = Integer.parseInt(tt);
         

         
         Date date1 = new Date();
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String dd = sdf.format(date1);
         String username = usernameTextField.getText();
      
       try {
        
             con = (Connection) ConnectionClass.getConnection();
            Statement StudentStatement = (Statement) con.createStatement();
            String slotSql = ("Select COUNT(*) from slot_info where username = '"+username+"' and status = '"+testStatus+"' and date >= '"+dd+"' and slot > '"+tt+"' " );
            PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
            ResultSet resultSet = slotPreparedStatement.executeQuery();
           while (resultSet.next()) { 
           count = resultSet.getString("COUNT(*)");
           }
           
           int counti = Integer.parseInt(count);
           
           if (counti > 5) {
               countLabel.setText("Number of missed reservations: " + count);
               countLabel.setForeground(Color.red);
           
           }
           else {
           countLabel.setText("Number of missed reservations: " +count);
           countLabel.setForeground(Color.green);
           }
           
           
          
           
          
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
       
       String success = "Check-in succesful";
        try{
            con = ConnectionClass.getConnection();
            Statement updateStatement = (Statement) con.createStatement();
            

            String update = ("UPDATE slot_info SET status = '"+success+"' where username = '"+username+"'");

            PreparedStatement queryStatement = con.prepareStatement(update);
            queryStatement.execute();
            
             JOptionPane.showMessageDialog(null,"Check-in successful");
            
            
             
         
            
            
    
    } 
           
               catch(Exception e){
        JOptionPane.showMessageDialog(null, e);
           }
       
       
        
    }//GEN-LAST:event_statusButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        new NEUHomePage().setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SnellAdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SnellAdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SnellAdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SnellAdminHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SnellAdminHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookingsTable;
    private javax.swing.JTextField classTextField;
    private javax.swing.JLabel countLabel;
    private javax.swing.JTextField dateField;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton reinstateButton;
    private javax.swing.JTextField seatField;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JButton statusButton;
    private javax.swing.JTable studentTable;
    private javax.swing.JButton suspendButton;
    private javax.swing.JTextField timeField;
    private javax.swing.JTextField timeTextField;
    public static javax.swing.JTextField usernameField;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
