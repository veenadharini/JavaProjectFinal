/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FinalProject;

import FinalProject.ConnectionClass;
import FinalProject.ConnectionClass;
import FinalProject.PopeyeHomePage;
import FinalProject.StudentLoginPage;
import FinalProject.StudentLoginPage;
import java.sql.*;
import java.text.*;
import java.util.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Veenadharini
 */
public class StudentOrderPaymentPage extends javax.swing.JFrame {

    /**
     * Creates new form StudentOrderPaymentPage
     */
    Connection con;
    public StudentOrderPaymentPage() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BackBttn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        navigate = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFinalOrder = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lbl_HuskyBal = new javax.swing.JLabel();
        BttnPay = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        lblOrderIdd = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(1920, 100));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BackBttn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back button.png"))); // NOI18N
        BackBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBttnActionPerformed(evt);
            }
        });
        jPanel1.add(BackBttn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 50, 50));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Student Order page title.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 20, 400, 60));

        navigate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        navigate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Account", "Back To Home Page", "My Profile", "Order Page", "Logout" }));
        navigate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                navigateMouseClicked(evt);
            }
        });
        navigate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navigateActionPerformed(evt);
            }
        });
        jPanel1.add(navigate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1720, 30, 160, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 100));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(1920, 980));
        jPanel2.setMinimumSize(new java.awt.Dimension(1920, 980));
        jPanel2.setPreferredSize(new java.awt.Dimension(1920, 980));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblFinalOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sr no.", "Dish", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFinalOrder);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 810, 330));

        jLabel1.setText("Your Husky Balance:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 740, -1, -1));
        jPanel2.add(lbl_HuskyBal, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 730, 100, 40));

        BttnPay.setBackground(new java.awt.Color(133, 0, 0));
        BttnPay.setForeground(new java.awt.Color(255, 255, 255));
        BttnPay.setText("Confirm Payment");
        BttnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BttnPayActionPerformed(evt);
            }
        });
        jPanel2.add(BttnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 710, 150, 60));

        jPanel3.setBackground(new java.awt.Color(133, 0, 0));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtReceipt.setColumns(20);
        txtReceipt.setRows(5);
        jScrollPane2.setViewportView(txtReceipt);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 80, 470, 570));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 0, 680, 980));

        jLabel3.setText("TOTAL AMOUNT:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 490, -1, -1));
        jPanel2.add(lbl_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 480, 120, 40));
        jPanel2.add(lblOrderIdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1920, 980));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void init() {
        String username = StudentLoginPage.usernameField.getText();
        float huskyBal =0.0f;
        //bttnReceipt.setEnabled(false);
        txtReceipt.setEnabled(false);
        try{
            con = ConnectionClass.getConnection();
            String sql5 = "Select husky_card from student_info where username = '"+username+"' " ;            
            PreparedStatement pst5 = con.prepareStatement(sql5);
            ResultSet rs5 =pst5.executeQuery(); 
            while(rs5.next()){
                
                huskyBal = Float.parseFloat(rs5.getString("husky_card"));
                }
                         
            lbl_HuskyBal.setText(Float.toString(huskyBal));
            
            String sql1 = "Select * from cart_table";
            PreparedStatement pst = con.prepareStatement(sql1);
            ResultSet rs =pst.executeQuery();

            DefaultTableModel tbl1 = (DefaultTableModel) tblFinalOrder.getModel();
            tbl1.setRowCount(0);

            while(rs.next()){
                Object o1[] = {rs.getString("Sr_no"), rs.getString("Dish"),rs.getString("Quantity"),rs.getString("Price")};
                tbl1.addRow(o1);
           
            }
            
            float total = Float.parseFloat(PopeyeHomePage.lbl_tot.getText());
            lbl_total.setText(Float.toString(total));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }

    private void BackBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBttnActionPerformed
        PopeyeHomePage php = new PopeyeHomePage();
        php.setVisible(true);
        dispose();
        try{
            con = ConnectionClass.getConnection();
            String sql1 = "Select * from cart_table";
            PreparedStatement pst = con.prepareStatement(sql1);
            ResultSet rs =pst.executeQuery();

            DefaultTableModel tbl1 = (DefaultTableModel) PopeyeHomePage.tblDishTable.getModel();
            tbl1.setRowCount(0);

            while(rs.next()){
                Object o1[] = {rs.getString("Sr_no"), rs.getString("Dish"),rs.getString("Quantity"),rs.getString("Price")};
                tbl1.addRow(o1);
           
            }
//            PopeyeHomePage pope = new PopeyeHomePage();
//            pope.getTotal();
        float subtotal = 0;
        float tax = 0;
        float total = 0;
        //String sb;
        float sb1;
        float tx1;
        float tot1;
        for(int n = 0; n<PopeyeHomePage.tblDishTable.getRowCount(); n++)
        {
            subtotal = subtotal +Float.parseFloat(PopeyeHomePage.tblDishTable.getValueAt(n, 3).toString());
            
        }
       // sb = String.format("%.2f",subtotal);
        tax = 0.065f*subtotal;
        total = subtotal + tax;
        DecimalFormat df = new DecimalFormat("#.##");
        String sb = df.format(subtotal);
        String tx = df.format(tax);
        String tot = df.format(total);
        sb1 = Float.parseFloat(sb);
        tx1 = Float.parseFloat(tx);
        tot1 = Float.parseFloat(tot);
        //sb1 = String.(sb);
        PopeyeHomePage.txtSubTotal.setText("$"+Float.toString(sb1));
        
        PopeyeHomePage.txtTaxes.setText("$"+Float.toString(tx1));
        
        PopeyeHomePage.txtTotal.setText("$"+Float.toString(tot1));
        
        PopeyeHomePage.lbl_subt.setVisible(false);
        PopeyeHomePage.lbl_tax.setVisible(false);
        PopeyeHomePage.lbl_tot.setVisible(false);
        PopeyeHomePage.lbl_subt.setText(Float.toString(sb1));
        PopeyeHomePage.lbl_tax.setText(Float.toString(tx1));
        PopeyeHomePage.lbl_tot.setText(Float.toString(tot1));
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_BackBttnActionPerformed

    private void BttnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BttnPayActionPerformed
       float bal;
       float remainBal;
       float cost =0.0f; 
       String vendor = PopeyeHomePage.Popeye.getText();
       String username = StudentLoginPage.usernameField.getText();
       String orderid = vendor+username+ (int)Math.floor(Math.random()*10000);
       String status = "Order Placed, Awaiting Confirmation";
       float subtotal = Float.parseFloat(PopeyeHomePage.lbl_subt.getText());
       float taxes = Float.parseFloat(PopeyeHomePage.lbl_tax.getText());
       float total = Float.parseFloat(PopeyeHomePage.lbl_tot.getText());
       float huskyBal =0.0f;
       int rows = PopeyeHomePage.tblDishTable.getRowCount();
       
       try
       {
            
          
            con = ConnectionClass.getConnection();
            
            //Query to get 
            
            
            //String sql3 = "Select husky_card from student_info where username = '"+username+"' " ;            
            //PreparedStatement pst3 = con.prepareStatement(sql3);
            //ResultSet rs3 =pst3.executeQuery(); 
            //while(rs3.next()){
                
              //  huskyBal = Float.parseFloat(rs3.getString("husky_card"));
                //}
            bal = Float.parseFloat(lbl_HuskyBal.getText());
            cost = Float.parseFloat(PopeyeHomePage.lbl_tot.getText());
            //System.out.println(cost);
            //System.out.println(bal);
            if (bal > cost)
            {
                remainBal = bal - cost;
                lbl_HuskyBal.setText(Float.toString(remainBal));          
                String sql4 = "Update student_info SET husky_card ='"+remainBal+"' WHERE username='"+username+"'";
                PreparedStatement pst4 = con.prepareStatement(sql4);
                pst4.execute(); 
                JOptionPane.showMessageDialog(this, "Your Order is successfully placed and awaiting confirmation from the restuarant");
                lblOrderIdd.setVisible(false);
                lblOrderIdd.setText(orderid);
                //receipt
                String receiptt = getreceipt();
                
                String sql = "insert into orders values(?,?,?,?,?,?,?,?)";//7
                PreparedStatement ps = con.prepareStatement(sql);
            
                ps.setString(1,vendor);
                ps.setString(2,orderid);
                ps.setString(3, status);
                ps.setString(4, username);
                ps.setFloat(5,subtotal);
                ps.setFloat(6, taxes);
                ps.setFloat(7, total);
                ps.setString(8, receiptt);
                ps.executeUpdate();
                
                
            
            
                String sql2 = "INSERT INTO `order_details`(`Sr_no`, `Order_ID`, `Dish`, `Quantity`, `Price`) values (?,?,?,?,?);";  //5
                PreparedStatement ps2 = con.prepareStatement(sql2);
            
                for (int row = 0; row < rows; row++) {
 
                String dish = PopeyeHomePage.tblDishTable.getValueAt(row,1).toString();
                int quantity = Integer.parseInt(PopeyeHomePage.tblDishTable.getValueAt(row,2).toString());
                float price = Float.parseFloat(PopeyeHomePage.tblDishTable.getValueAt(row,3).toString());
                //System.out.println(dish);
                //System.out.println(price);
                //System.out.println(quantity);
                ps2.setNull(1,Types.INTEGER);
                ps2.setString(2, orderid);
                ps2.setString(3, dish);
                ps2.setInt(4, quantity );
                ps2.setFloat(5,price);
            
            
                ps2.addBatch();
            }     
            
            ps2.executeBatch();
            //bttnReceipt.setEnabled(true);
        }
            else{
                JOptionPane.showMessageDialog(this, "You do not have sufficient Husky Balance for this transaction. Please add more Balance to your Husky card");
            }
           
            
       }    
            
            //String sql1 = "INSERT INTO `order_details`(`Sr_no`, `Order_ID`, `Dish`, `Quantity`, `Price`) values (?,?,?,?,?);";  //5
            //PreparedStatement ps1 = con.prepareStatement(sql1);
            
            catch(Exception e)
       {
            JOptionPane.showMessageDialog(null,e);
            //e.printStackTrace();
       }
    
            
    }//GEN-LAST:event_BttnPayActionPerformed

    private void navigateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navigateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_navigateMouseClicked

    private void navigateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navigateActionPerformed
        // TODO add your handling code here:
        if(navigate.getSelectedItem().toString().equals("Back To Home Page")){
            String role = "";
            try{
                String slotSql = ("Select role from student_info where username = '"+StudentLoginPage.usernameField.getText()+"' ");
                PreparedStatement slotPreparedStatement = con.prepareStatement(slotSql);
                ResultSet c = slotPreparedStatement.executeQuery();
                while(c.next())
                {
                    role = c.getString("role");
                }
            } catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }

            if (role.equals("student")){
                new StudentHomePage().setVisible(true);
                dispose();
            }

            if (role.equals("faculty")){
                new FacultyHomePage().setVisible(true);
                dispose();
            }

        }
        if(navigate.getSelectedItem().toString().equals("My Profile")){
            new StudentProfilePage().setVisible(true);
            dispose();
        }
        if(navigate.getSelectedItem().toString().equals("Order Page")){
            new StudentOrdersPage().setVisible(true);
            dispose();
        }
        if(navigate.getSelectedItem().toString().equals("Logout")){
            new NEUHomePage().setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_navigateActionPerformed

   public String getreceipt() {
       
       String user = StudentLoginPage.usernameField.getText();
        String tot = lbl_total.getText();
        String vendor = PopeyeHomePage.Popeye.getText();
        String orderidd = lblOrderIdd.getText();
        String orderIDfinal;
        String dish ="";
        String qtyy ="";
        String price ="";
        String fname="";
        String receipt="";
         try{
            con = ConnectionClass.getConnection();
            String sql5 = "Select first_name from student_info where username = '"+user+"' " ;            
            PreparedStatement pst5 = con.prepareStatement(sql5);
            ResultSet rs5 =pst5.executeQuery(); 
            while(rs5.next()){
                
                fname = (rs5.getString("first_name"));
                }
            
            
                
                //dish = rs5.getString("Dish");
                //qtyy = rs5.getString("Quantity");
                //price = rs5.getString("Price");
                //while(rs.next()){
                txtReceipt.setEnabled(true);
                txtReceipt.setText("***********************************"+vendor+"'s Receipt***********************************"+"\n");
                txtReceipt.setText(txtReceipt.getText() + "========================================================================"+"\n");
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");               
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");  
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");
                txtReceipt.setText(txtReceipt.getText() + "Dear "+fname+", Thank you for ordering from "+vendor+"'s \n Your Order ID is " + orderidd +"\n");
                //txtReceipt.setText(txtReceipt.getText() + "\t"+"\t"+fname+" ,your Order ID is " + orderidd +"\n");
                txtReceipt.setText(txtReceipt.getText() + "========================================================================"+"\n");
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");  
                txtReceipt.setText(txtReceipt.getText() + ""+"\n");
                txtReceipt.setText(txtReceipt.getText()+"Dish"+"\t"+"\t"+"Quantity"+"\t"+"Price"+"\n");
                DefaultTableModel md = (DefaultTableModel)tblFinalOrder.getModel();
                for (int i =0; i<tblFinalOrder.getRowCount();i++){
                   dish = tblFinalOrder.getValueAt(i, 1).toString();
                   qtyy = tblFinalOrder.getValueAt(i, 2).toString();
                   price = tblFinalOrder.getValueAt(i, 3).toString();
                   txtReceipt.setText(txtReceipt.getText()+dish+"\t"+qtyy+"\t"+price+"\n");
                   
                   
                    
                }
                txtReceipt.setText(txtReceipt.getText() + "\n"+"====================================================================="+"\n");
                txtReceipt.setText(txtReceipt.getText() + "Your Order Total is $"+tot+" \n  "
                        +"\n"+"====================================================================="+"\n"
                        +"\n \t \t"+"Thank you, Order again!\n \t \t Go Green, Save Paper, Use E-receipts! ");
                txtReceipt.setText(txtReceipt.getText() + "\n"+"====================================================================="+"\n");
                //txtReceipt.setText(txtReceipt.getText() + rs5.getString(2) +rs5.getString(3) + rs5.getString(4)+"\n");
                        //"Dish: " + dish + "Quantity: " + qtyy + "Price:" + price + "\n");
                //Object o1[] = {rs5.getString("Dish") rs.getString("Dish"),rs.getString("Quantity"),rs.getString("Price")};
                //tbl1.addRow(o1);
                receipt = txtReceipt.getText();
                System.out.println(receipt);
                
    }
            catch(Exception e)
    {
            JOptionPane.showMessageDialog(null,e);        
    }                                           
       return receipt;
   
                    
           
            
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentOrderPaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentOrderPaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentOrderPaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentOrderPaymentPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentOrderPaymentPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBttn;
    private javax.swing.JButton BttnPay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblOrderIdd;
    public static javax.swing.JLabel lbl_HuskyBal;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JComboBox<String> navigate;
    private javax.swing.JTable tblFinalOrder;
    private javax.swing.JTextArea txtReceipt;
    // End of variables declaration//GEN-END:variables

    

    
}